/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 08 19:48:40 GMT 2018
 */

package De;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import De.De;
import De.Face;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class De_ESTest extends De_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      De de0 = new De();
      de0.InitDe1();
      String string0 = de0.toString();
      assertEquals("OR 1\n\nOR 2\n\nOR 3\n\nOR 4\n\nOR 5\n\nOR 6", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      De de0 = new De();
      de0.InitDe1();
      Integer integer0 = new Integer(2);
      Face face0 = de0.getFace(integer0);
      assertEquals(2, (int)face0.getValeur());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      De de0 = new De();
      // Undeclared exception!
      try { 
        de0.setFACE();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("De.De", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      De de0 = new De();
      // Undeclared exception!
      try { 
        de0.getFace((Integer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("De.De", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      De de0 = new De();
      Integer integer0 = new Integer(18);
      Face face0 = de0.getFace(integer0);
      assertNull(face0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      De de0 = new De();
      Integer integer0 = new Integer(4);
      Face face0 = de0.getFace(integer0);
      assertNull(face0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      De de0 = new De();
      Integer integer0 = new Integer(3);
      Face face0 = de0.getFace(integer0);
      assertNull(face0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      De de0 = new De();
      Integer integer0 = new Integer(5);
      Face face0 = de0.getFace(integer0);
      assertNull(face0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      De de0 = new De();
      Integer integer0 = new Integer(1);
      Face face0 = de0.getFace(integer0);
      assertNull(face0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      De de0 = new De();
      // Undeclared exception!
      try { 
        de0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("De.De", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      De de0 = new De();
      de0.InitDe1();
      de0.setFACE();
      de0.setFACE();
      de0.setFACE();
      de0.setFACE();
      de0.setFACE();
      de0.setFACE();
      de0.setFACE();
      de0.setFACE();
      de0.setFACE();
  }
}
