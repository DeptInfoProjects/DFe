/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 08 19:45:09 GMT 2018
 */

package Bot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Bot.Joueur;
import De.De;
import De.Face;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Joueur_ESTest extends Joueur_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Joueur joueur0 = new Joueur();
      De de0 = new De();
      joueur0.d1 = de0;
      Face face0 = joueur0.lancerDe2();
      assertNull(face0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Joueur joueur0 = new Joueur();
      De de0 = new De();
      joueur0.d1 = de0;
      Face face0 = joueur0.lancerDe1();
      assertNull(face0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Joueur joueur0 = new Joueur();
      joueur0.d1 = joueur0.d2;
      joueur0.d1 = null;
      // Undeclared exception!
      try { 
        joueur0.lancerDe2();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Bot.Joueur", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Joueur joueur0 = new Joueur();
      joueur0.d1 = joueur0.d2;
      joueur0.d1 = null;
      // Undeclared exception!
      try { 
        joueur0.lancerDe1();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Bot.Joueur", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Joueur joueur0 = new Joueur();
      Face face0 = joueur0.lancerDe1();
      Face face1 = joueur0.lancerDe2();
      assertSame(face1, face0);
      
      Face face2 = joueur0.lancerDe1();
      Face face3 = joueur0.lancerDe2();
      assertSame(face3, face2);
      
      Face face4 = joueur0.lancerDe2();
      assertEquals(3, (int)face4.getValeur());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Joueur joueur0 = new Joueur();
      joueur0.lancerDe2();
      Face face0 = joueur0.lancerDe1();
      assertEquals(1, (int)face0.getValeur());
      
      joueur0.lancerDe2();
      joueur0.lancerDe1();
      joueur0.lancerDe1();
      joueur0.d2.setFACE();
      Face face1 = joueur0.lancerDe1();
      assertNotNull(face1);
      
      joueur0.d1.setFACE();
      joueur0.lancerDe2();
      Face face2 = joueur0.lancerDe1();
      assertEquals(6, (int)face2.getValeur());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Joueur joueur0 = new Joueur();
      Face face0 = joueur0.lancerDe1();
      Face face1 = joueur0.lancerDe2();
      assertSame(face1, face0);
      
      Face face2 = joueur0.lancerDe1();
      Face face3 = joueur0.lancerDe2();
      assertSame(face3, face2);
      
      Face face4 = joueur0.lancerDe1();
      assertEquals(3, (int)face4.getValeur());
      
      Face face5 = joueur0.lancerDe2();
      Face face6 = joueur0.lancerDe1();
      assertSame(face6, face5);
      
      Face face7 = joueur0.lancerDe1();
      assertEquals(5, (int)face7.getValeur());
      
      Face face8 = joueur0.lancerDe1();
      Face face9 = joueur0.lancerDe2();
      assertNotSame(face9, face8);
      assertNotNull(face9);
  }
}
