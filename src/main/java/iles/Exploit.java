package iles;

import bot.Joueur;
import de.Type;
import partie.Tours;
import de.Face;

import java.util.Random;

import static iles.TypeEffet.*;

public class Exploit extends Carte{
    private  String nom;
    private  TypeEffet type;
    public  Prix prix;
    public Integer stock;


    public Exploit(String nom , TypeEffet type, Prix prix){
        this.nom = nom;
        this.type = type;
        this.prix = prix;
        this.stock = 4;
    }

    public String getNom(){
        return nom;
    }

    public TypeEffet getType(){
        return type;
    }

    public void modStock(){
        stock--;
    }

    private int rand() {
        Random rand = new Random();
        return rand.nextInt(2);
    }

    private static final String BLACK = "\u001B[30m";

    public void applyEffet(Joueur JoueurActif) {
        int nbVic = JoueurActif.getInventaireJoueur().getNbVictoire();
        if (this.type == IMMEDIAT){
            if (this.equals(MARTEAU)){
                JoueurActif.getInventaireJoueur().setNbVictoire(nbVic);
            }
            if (this.equals(COFFRE)){
                JoueurActif.getInventaireJoueur().setNbVictoire(nbVic + 2);
            }
            if (this.equals(SATYRES)){
                JoueurActif.getInventaireJoueur().setNbVictoire(nbVic + 6);
                effetSatyre(JoueurActif);
            }
            if (this.equals(HERBES)){
                JoueurActif.getInventaireJoueur().setNbVictoire(nbVic + 2);
                JoueurActif.getInventaireJoueur().setInventaire(JoueurActif.getInventaireJoueur().getNbOR() + 3,JoueurActif.getInventaireJoueur().getNbSolaire() ,JoueurActif.getInventaireJoueur().getNbLunaire()+3,JoueurActif.getInventaireJoueur().getNbVictoire(),JoueurActif.getInventaireJoueur().getCartes());
                //effet immediat = ajout 3 or et 3 lunaires Ã  l'inventiare du joueur
            }
            if (this.equals(MINOTAURE)){
                JoueurActif.getInventaireJoueur().setNbVictoire(nbVic + 8);
                effetMinotaure(JoueurActif);
            }

            if (this.equals(CASQUE)){
                JoueurActif.getInventaireJoueur().setNbVictoire(nbVic + 4);

            }
            if (this.equals(PINCE)){
                JoueurActif.getInventaireJoueur().setNbVictoire(nbVic + 8);
                effetPince(JoueurActif);
            }


            if (this.equals(MIRROIR)){
                JoueurActif.getInventaireJoueur().setNbVictoire(nbVic + 10);
            }
            if (this.equals(ENIGME)){
                JoueurActif.getInventaireJoueur().setNbVictoire(nbVic + 10);
                effetEnigme(JoueurActif);
            }
            if (this.equals(PASSEUR)){
                JoueurActif.getInventaireJoueur().setNbVictoire(nbVic + 12);
            }
            if (this.equals(HYDRE)){
                JoueurActif.getInventaireJoueur().setNbVictoire(nbVic + 26);
            }
            if (this.equals(MEDUSE)){
                JoueurActif.getInventaireJoueur().setNbVictoire(nbVic + 14);
            }
        }
        else if (this.type == PERMANENT){
            if (this.equals(SABOTS)){
                JoueurActif.getInventaireJoueur().setNbVictoire(nbVic + 2);
            }
            if (this.equals(ANCIEN)){
                JoueurActif.getInventaireJoueur().setNbVictoire(nbVic);
            }
            if (this.equals(AILES)){
                JoueurActif.getInventaireJoueur().setNbVictoire(nbVic + 4);
            }
        }
        else if (this.equals(NULL)){
            JoueurActif.getInventaireJoueur().setNbVictoire(nbVic);
        }

    }


    private void effetSatyre(Joueur Joueur) {
        int choix = rand();
        if (Joueur == Tours.joueur1) {
            Face memFd1J2 = Tours.joueur2.getD1().getFace();
            Face memFd2J2 = Tours.joueur2.getD2().getFace();
            if (choix == 1) {
                Joueur.getInventaireJoueur().adderFace(memFd1J2);
                System.out.println(BLACK +"Joueur1 gagne " + memFd1J2.AfficheFace()+ BLACK +" grace a la carte Les Satyres");
            }
            else {
                Joueur.getInventaireJoueur().adderFace(memFd2J2);
                System.out.println(BLACK +"Joueur1 gagne " + memFd2J2.AfficheFace() + BLACK +" grace a la carte Les Satyres");
            }

        }
        else if (Joueur == Tours.joueur2) {
            Face memFd1J1 = Tours.joueur1.getD1().getFace();
            Face memFd2J1 = Tours.joueur1.getD2().getFace();
            if (choix == 1) {
                Joueur.getInventaireJoueur().adderFace(memFd1J1);
                System.out.println(BLACK +"Joueur2 gagne " + memFd1J1.AfficheFace() + "grace a la carte Les Satyres");

            }
            else {
                Joueur.getInventaireJoueur().adderFace(memFd2J1);
                System.out.println(BLACK +"Joueur2 gagne " + memFd2J1.AfficheFace() + "grace a la carte Les Satyres");

            }

        }

    }

    private void effetPince(Joueur Joueur) {
        Face memFd1Lance1 = Joueur.getD1().getFace();
        Face memFd2Lance1 = Joueur.getD2().getFace();
        Joueur.getInventaireJoueur().adderFace(memFd1Lance1);
        Joueur.getInventaireJoueur().adderFace(memFd2Lance1);
        System.out.println(BLACK +"Il gagne " + memFd1Lance1.AfficheFace() + "grace a la carte La Pince");
        System.out.println(BLACK +"Il gagne " + memFd2Lance1.AfficheFace() + "grace a la carte La Pince");

        Face memFd1Lance2 = Joueur.getD1().getFace();
        Face memFd2Lance2 = Joueur.getD2().getFace();
        Joueur.getInventaireJoueur().adderFace(memFd1Lance2);
        Joueur.getInventaireJoueur().adderFace(memFd2Lance2);
        System.out.println(BLACK +"Il gagne " + memFd1Lance2.AfficheFace() + "grace a la carte La Pince");
        System.out.println(BLACK +"Il gagne " + memFd2Lance2.AfficheFace() + "grace a la carte La Pince");

    }

    private void effetMinotaure(Joueur Joueur){
        if (Joueur == Tours.joueur1) {
            Face memFd1J2 = Tours.joueur2.getD1().getFace();
            Face memFd2J2 = Tours.joueur2.getD2().getFace();
            if(memFd1J2.getType() == Type.NORMAL){
                Tours.joueur2.getInventaireJoueur().adderFace(new Face(memFd1J2.getType(), 0-memFd1J2.getValeur(),memFd1J2.getRes()));
                System.out.println(BLACK +"Le Joueur 2 perd " + memFd1J2.AfficheFace() + "a cause de la carte Le Minotaure");

            }
            else {
                Tours.joueur2.getInventaireJoueur().adderFace(new Face(memFd1J2.getType(),0-memFd1J2.getNbOR(), 0-memFd1J2.getNbLUN(),0-memFd1J2.getNbSOL(),0-memFd1J2.getNbSOL()));
                System.out.println(BLACK +"Le Joueur 2 perd " + memFd1J2.AfficheFace() + "a cause de la carte Le Minotaure");

            }

            if(memFd2J2.getType() == Type.NORMAL){
                Tours.joueur2.getInventaireJoueur().adderFace(new Face(memFd2J2.getType(), 0-memFd2J2.getValeur(),memFd2J2.getRes()));
                System.out.println(BLACK +"Le Joueur 2 perd " + memFd2J2.AfficheFace() + "a cause de la carte Le Minotaure");

            }
            else {
                Tours.joueur2.getInventaireJoueur().adderFace(new Face(memFd2J2.getType(),0-memFd2J2.getNbOR(), 0-memFd2J2.getNbLUN(),0-memFd2J2.getNbSOL(),0-memFd2J2.getNbVICT()));
                System.out.println(BLACK +"Le Joueur 2 perd " + memFd2J2.AfficheFace() + "a cause de la carte Le Minotaure");

            }
        }

        else if (Joueur == Tours.joueur2) {
            Face memFd1J1 = Tours.joueur1.getD1().getFace();
            Face memFd2J1 = Tours.joueur1.getD2().getFace();
            if(memFd1J1.getType() == Type.NORMAL){
                Tours.joueur1.getInventaireJoueur().adderFace(new Face(memFd1J1.getType(), 0-memFd1J1.getValeur(),memFd1J1.getRes()));
                System.out.println(BLACK +"Le Joueur 1 perd " + memFd1J1.AfficheFace() + "a cause de la carte Le Minotaure");

            }
            else {
                Tours.joueur1.getInventaireJoueur().adderFace(new Face(memFd1J1.getType(),0-memFd1J1.getNbOR(), 0-memFd1J1.getNbLUN(),0-memFd1J1.getNbSOL(),0-memFd1J1.getNbSOL()));
                System.out.println(BLACK +"Le Joueur 1 perd " + memFd1J1.AfficheFace() + "a cause de la carte Le Minotaure");
            }

            if(memFd2J1.getType() == Type.NORMAL){
                Tours.joueur1.getInventaireJoueur().adderFace(new Face(memFd2J1.getType(), 0-memFd2J1.getValeur(),memFd2J1.getRes()));
                System.out.println(BLACK +"Le Joueur 1 perd " + memFd2J1.AfficheFace() + "a cause de la carte Le Minotaure");

            }
            else {
                Tours.joueur1.getInventaireJoueur().adderFace(new Face(memFd2J1.getType(),0-memFd2J1.getNbOR(), 0-memFd2J1.getNbLUN(),0-memFd2J1.getNbSOL(),0-memFd2J1.getNbVICT()));
                System.out.println(BLACK +"Le Joueur 1 perd " + memFd2J1.AfficheFace() + "a cause de la carte Le Minotaure");

            }
        }
    }


    private void effetEnigme(Joueur Joueur){
        int choix = rand();
        if (choix ==1) {
            Face lance1 = Joueur.getD1().getFace();
            Face lance2 = Joueur.getD1().getFace();
            Face lance3 = Joueur.getD1().getFace();
            Face lance4 = Joueur.getD1().getFace();
            Joueur.getInventaireJoueur().adderFace(lance1);
            Joueur.getInventaireJoueur().adderFace(lance2);
            Joueur.getInventaireJoueur().adderFace(lance3);
            Joueur.getInventaireJoueur().adderFace(lance4);
            System.out.println(BLACK +"Il gagne " + lance1.AfficheFace()+ " " + lance2.AfficheFace() +" "+ lance3.AfficheFace() +" "+ lance4.AfficheFace() +BLACK + " grace a la carte L'Enigme");
        }
        else {
            Face lance1 = Joueur.getD2().getFace();
            Face lance2 = Joueur.getD2().getFace();
            Face lance3 = Joueur.getD2().getFace();
            Face lance4 = Joueur.getD2().getFace();
            Joueur.getInventaireJoueur().adderFace(lance1);
            Joueur.getInventaireJoueur().adderFace(lance2);
            Joueur.getInventaireJoueur().adderFace(lance3);
            Joueur.getInventaireJoueur().adderFace(lance4);
            System.out.println(BLACK +"Il gagne " + lance1.AfficheFace()+ " " + lance2.AfficheFace() + " " +lance3.AfficheFace() + " " + lance4.AfficheFace() + BLACK +" grace a la carte L'Enigme");
        }
    }


    public static void effetSabots(Joueur Joueur){
        Random rand = new Random();
        int choix = rand.nextInt(2);

        if (choix == 1) {
            Face memFd1 = Joueur.getD1().getFace();
            Joueur.getInventaireJoueur().adderFace(memFd1);
            System.out.println(BLACK + "Il gagne " + memFd1.AfficheFace() + BLACK +" grace a la carte Les Sabots d'argent");

        }
        else {
            Face memFd2 = Joueur.getD2().getFace();
            Joueur.getInventaireJoueur().adderFace(memFd2);
            System.out.println(BLACK +"Il gagne " + memFd2.AfficheFace() + BLACK +" grace a la carte Les Sabots d'argent");

        }
    }


    public static void effetAncien(Joueur Joueur){
        Random rand = new Random();
        int choix = rand.nextInt(2);

        int nbOr = Joueur.getInventaireJoueur().getNbOR();
        int nbVict = Joueur.getInventaireJoueur().getNbVictoire();

        if (choix == 1 && Joueur.getInventaireJoueur().getNbOR() >= 3 ) {
            Joueur.getInventaireJoueur().setNbOR(nbOr - 3);
            Joueur.getInventaireJoueur().setNbVictoire(nbVict + 4);
            System.out.println("Il Ã©change Ã  l'ancien 3 Or contre 4 points Victoire");

        }
        else{
            System.out.println("Il choisit de garder son Or face a l'Ancien");
        }

    }


    public static void effetAiles(Joueur Joueur){

        Random rand = new Random();
        int choix = rand.nextInt(3);

        if (choix == 0){
            Joueur.getInventaireJoueur().setNbOR(Joueur.getInventaireJoueur().getNbOR() + 1);
            System.out.println("Il choisit de prendre 1 Or aux Ailes de la Gardienne");
        }
        if (choix == 1){
            Joueur.getInventaireJoueur().setNbOR(Joueur.getInventaireJoueur().getNbSolaire() + 1);
            System.out.println("Il choisit de prendre 1 Solaire aux Ailes de la Gardienne");
        }
        if (choix == 2){
            Joueur.getInventaireJoueur().setNbOR(Joueur.getInventaireJoueur().getNbLunaire() + 1);
            System.out.println("Il choisit de prendre 1 Lunaire aux Ailes de la Gardienne");
        }

    }





}
